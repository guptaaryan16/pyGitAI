# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python package

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12"]

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: "Test the flake lint issues"
      run: |
        flake8 .
      continue-on-error: true
    
    - name: Test Install and usage 
      run: |
        # Install from Source test on python version ${{ matrix.python-version }}
        python -m pip install .

    - name: "Make the repo setup"
      run: |
        bash setup.py ${{ API_KEY }}
      
    - name: "pygit commit"
      run: | 
        # Test pygit commit
        pygit commit -gm

    - name: pygit comment
      run: | 
        # Test pygit comment 
        pygit comment --path=./math.py --function-name=square
        
        # Store the file locally and then test the extended behavior 
        cp 

        # Test pygit comment 
        pygit comment --path=./math.py --function-name=cube

        # Test revert pygit comment 


        # git switch 
        git switch -c test_branch 

        # move the test file for generating PR message 
        mv ../scripts/test_generate.py test_generate.py 
    
    - name: "Test Generate PR message"
      run: |
        # Generate the PR message 
        pygit generate-pr -gm      